<div id="container">
    <div>
        <input type="text" id="nomeArquivo" placeholder="Insira nome do arquivo">
        <input type="button" onclick="acessarArquivo();" value="Abrir">
    </div>
    <div>
        <!-- teste 7: permitir limpar lista de abertos recentemente -->
        <input type="button" value="Limpar" onclick="limpar();">
    </div>
    <div>
        <div>
            Abertos recentemente:
        </div>
        <div id="listaRecentes">
        </div>
    </div>
    <div>
        <div>
            Conteudo do arquivo:
        </div>
        <div id="conteudoArquivo"> 
        </div> 
    </div>
    
</div>
<script>

    //teste 2: recentes armazena os nomes dos arquivos abertos mais recentemente
    var recentes = [];

    var nomeArquivo = document.getElementById("nomeArquivo");
    var listaRecentes = document.getElementById("listaRecentes");
    var conteudoArquivo = document.getElementById("conteudoArquivo");

    async function acessarArquivo() {

        var nome = nomeArquivo.value;

        //teste 3: verificando o nome do arquivo antes de acessá-lo   
        var validarNomeRegex = /^\w+\.\w+$/;
        if(!validarNomeRegex.test(nome)) {
            alert("Insira um nome valido!");
            return;
        }

        //teste 6: alertar o usuário quando o arquivo for inexistente ou não puder ser acessado.
        let erro = false;

        //teste 5: acessando e exibindo arquivos do servidor
        await fetch(nome, {method: "get"})
        .then( async (response) => {
            if(response.status != 200) {
                erro = true;
                return;
            }
            var cont = await response.text();
            conteudoArquivo.innerHTML = `<div>${cont}</div>`;
        })
        .catch ( () => {
            erro = true;
            return;
        });

        //teste 6: alertar o usuário quando o arquivo for inexistente ou não puder ser acessado.
        if(erro) {
            alert("Nao foi possivel acessar o arquivo!");
            return;
        }

        //teste 2: atualizando recentes a cada passo
        let pos = recentes.indexOf(nome);
        if(pos != -1) recentes.splice(pos, 1); 
        recentes = [nome].concat(recentes).splice(0, 10);

        //teste 4: exibindo a lista de recentes em tela aos usuarios
        listaRecentes.innerHTML = "";
        recentes.forEach(element => {
            listaRecentes.innerHTML += `<div>${element}</div>`;
        });
    }

    //teste 7: permitir limpar lista de arquivos abertos recentemente
    function limpar() {
        recentes = [];
        listaRecentes.innerHTML = "";
    }
</script>
<style>
    #container {
        height: 200px; width: 400px; 
        display: flex; flex-direction: column; 
        justify-content: space-between; align-items: center;
    }

</style>
